{"remainingRequest":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v3\\src\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\04_dev\\99_workspace_launchingService\\myStocks_v3\\src\\front\\src\\pages\\portfolio\\PortfolioList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v3\\src\\front\\src\\pages\\portfolio\\PortfolioList.vue","mtime":1644150183063},{"path":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v3\\src\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v3\\src\\front\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v3\\src\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v3\\src\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v3\\src\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["PortfolioList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkfile":"PortfolioList.vue","sourceRoot":"src/pages/portfolio","sourcesContent":["<template>\r\n  <div>\r\n    <b-table striped hover \r\n             :items=\"items\" \r\n             :fields=\"fields\"\r\n             @row-dblclicked=\"(item, index, event) => rowDblClickHandler(item, index, event)\"\r\n             >\r\n      <template #cell(actions)=\"row\">\r\n        <b-icon style=\"cursor: pointer;\" \r\n                icon=\"trash-fill\" \r\n                variant=\"dark\"\r\n                @click=\"del(row.item, row.index, $event.target)\"></b-icon>\r\n      </template>\r\n    </b-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import PortfolioService from \"@/services/portfolio.service.js\";\r\n\r\n  export default {\r\n    name: \"portfolio-list\",\r\n    components: {\r\n      /**\r\n       * components\r\n       */\r\n    },\r\n    data () {\r\n      return {\r\n        // Note 'isActive' is left out and will not appear in the rendered table\r\n        fields: [\r\n          {\r\n            key: 'businessCycle',\r\n            label: '경기순환/섹터',\r\n            sortable: true\r\n          },\r\n          {\r\n            key: 'ticker',\r\n            label: '티커',\r\n            sortable: true\r\n          },\r\n          {\r\n            key: 'currentPrice',\r\n            label: '현재가',\r\n            sortable: false,\r\n            variant: 'danger'\r\n          },\r\n          {\r\n            key: 'unitPrice',\r\n            label: '매수단가',\r\n            sortable: false\r\n          },\r\n          {\r\n            key: 'stockNum',\r\n            label: '주식수',\r\n            sortable: false\r\n          },\r\n          {\r\n            key: 'totalTradingAmount',\r\n            label: '매수금액',\r\n            sortable: false\r\n          },\r\n          {\r\n            key: 'evalAmount',\r\n            label: '평가금액',\r\n            sortable: false\r\n          },\r\n          {\r\n            key: 'earningAmount',\r\n            label: '수익금액',\r\n            sortable: false\r\n          },\r\n          {\r\n            key: 'earningRate',\r\n            label: '수익률',\r\n            sortable: false\r\n          },\r\n          {\r\n            key: 'annualPayout',\r\n            label: '주당배당금',\r\n            sortable: false\r\n          },\r\n          {\r\n            key: 'totalPayout',\r\n            label: '총배당금',\r\n            sortable: false\r\n          },\r\n          {\r\n            key: 'investmentDivYield',\r\n            label: '투자배당률',\r\n            sortable: false\r\n          },\r\n          {\r\n            key: 'dividendPayMonth',\r\n            label: '배당주기',\r\n            sortable: false\r\n          },\r\n          {\r\n            key: 'portion',\r\n            label: '비중',\r\n            sortable: false\r\n          },\r\n          {\r\n            key: 'actions',\r\n            label: 'Actions',\r\n          },\r\n        ],\r\n        items: [\r\n          { isActive: true, age: 40, first_name: 'Dickerson', last_name: 'Macdonald' },\r\n          { isActive: false, age: 21, first_name: 'Larsen', last_name: 'Shaw' },\r\n          { isActive: false, age: 89, first_name: 'Geneva', last_name: 'Wilson' },\r\n          { isActive: true, age: 38, first_name: 'Jami', last_name: 'Carney' }\r\n        ],\r\n        portfolioList: [],\r\n        selectedPortfolioId: '',\r\n      }\r\n    },\r\n    created() {\r\n\r\n    },\r\n    mounted() {  \r\n      this.getPortfolioList()\r\n    },\r\n    methods: {\r\n      refresh(portfolioId) {\r\n        //this.getPortfolioList()\r\n        console.log('this.selectedPortfolioId='+this.selectedPortfolioId+', portfolioId='+portfolioId)\r\n        this.selectedPortfolioId = portfolioId\r\n        this.getData(this.selectedPortfolioId)\r\n      },\r\n      getPortfolioList() {\r\n        let param = { email: this.$store.state.email } \r\n        console.log('param='+JSON.stringify(param))\r\n\r\n        PortfolioService.getPortfolioList(param)\r\n        .then(res => {\r\n          console.log(res);\r\n          if (res.status === 200) {\r\n            this.portfolioList = res.data\r\n            this.selectedPortfolioId = res.data[0].portfolioId\r\n            this.getData(this.selectedPortfolioId)\r\n\r\n            this.$emit('emitPortfolioList', this.portfolioList)\r\n          } else {\r\n\r\n          }\r\n        })    \r\n      },\r\n      getData(portfolioId) {\r\n        console.log(\">>>>> getData::portfolioList::getData::protfolioId=\"+portfolioId+\", selectedPortfolioId=\"+this.selectedPortfolioId)\r\n        let param = { email: this.$store.state.email\r\n                    , portfolioId: portfolioId\r\n                    } \r\n        PortfolioService.getPortfolioStockList(param)\r\n        .then(res => {\r\n          console.log(res);\r\n          if (res.status === 200) {\r\n            //this.items = res.data.list\r\n            console.log('res.data='+res.data)\r\n            let tmp_items = []\r\n            res.data.forEach((element, index) => {\r\n              console.log('index='+index+', element='+element)\r\n              var obj = {\r\n                businessCycle: element.stock.businessCycle + '/' + element.stock.sector,\r\n                ticker: element.stock.ticker,\r\n                currentPrice: element.stock.currentPrice,\r\n                unitPrice: element.unitPrice,\r\n                stockNum: element.stockNum,\r\n                totalTradingAmount: element.unitPrice * element.stockNum,\r\n                evalAmount: element.stock.currentPrice * element.stockNum,\r\n                earningAmount : (element.stock.currentPrice * element.stockNum) - (element.unitPrice * element.stockNum),\r\n                earningRate: ((element.stock.currentPrice * element.stockNum) - (element.unitPrice * element.stockNum)) / (element.unitPrice * element.stockNum),\r\n                annualPayout: element.stock.annualPayout,\r\n                totalPayout : element.stock.annualPayout * element.stockNum,\r\n                investmentDivYield: (element.stock.annualPayout * element.stockNum) / (element.unitPrice * element.stockNum),\r\n                dividendPayMonth: element.stock.dividendPayMonth,\r\n                portion: 0\r\n              }\r\n              console.log('obj='+obj)\r\n              tmp_items.push(obj)\r\n            })\r\n            this.items = tmp_items\r\n          } else {\r\n          }\r\n        })    \r\n      }, \r\n      rowDblClickHandler(obj, index, event) {\r\n        console.log('rowDblClickHandler::obj='+JSON.stringify(obj))\r\n        //this.fields.push({ key: 'actions', label: 'Actions' })\r\n        \r\n      },\r\n      del(item, index, event) {\r\n        console.log('del::index='+index+', item='+JSON.stringify(item))\r\n        console.log('this.selectedPortfolioId='+this.selectedPortfolioId)\r\n        let param = { email: this.$store.state.email\r\n                    , portfolioId: this.selectedPortfolioId\r\n                    , ticker: item.ticker\r\n                    } \r\n\r\n        if(confirm(\"삭제하시겠습니까?\")) {\r\n          PortfolioService.remove(data)\r\n          .then(\r\n            res => {\r\n              if (res.status === 200) {\r\n                this.refresh(this.selectedPortfolioId)\r\n                alert(\"삭제되었습니다.\")\r\n              } else {\r\n                alert(\"실행중 실패했습니다.\\n다시 이용해 주세요.\")\r\n              }\r\n            })\r\n        }\r\n\r\n      }\r\n      \r\n    }\r\n  }\r\n</script>\r\n<style lang=\"scss\">\r\n\r\n</style>    "]}]}