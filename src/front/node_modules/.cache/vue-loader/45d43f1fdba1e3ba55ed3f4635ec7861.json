{"remainingRequest":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v3\\src\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\04_dev\\99_workspace_launchingService\\myStocks_v3\\src\\front\\src\\pages\\portfolio\\PortfolioList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v3\\src\\front\\src\\pages\\portfolio\\PortfolioList.vue","mtime":1644472760735},{"path":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v3\\src\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v3\\src\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v3\\src\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v3\\src\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["PortfolioList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"PortfolioList.vue","sourceRoot":"src/pages/portfolio","sourcesContent":["<template>\r\n  <div>\r\n    <b-table striped hover \r\n             :items=\"items\" \r\n             :fields=\"fields\"\r\n             :busy=\"isBusy\"\r\n             sticky-header=\"700px\"\r\n             @row-dblclicked=\"(item, index, event) => rowDblClickHandler(item, index, event)\"\r\n             @head-clicked=\"(key, field, event) => headClickHandler(key, field, event)\"\r\n             >\r\n\r\n      <template #table-busy>\r\n        <div class=\"text-center text-danger my-2\">\r\n          <b-spinner class=\"align-middle\"></b-spinner>\r\n          <strong>Loading...</strong>\r\n        </div>\r\n      </template>\r\n\r\n      <template #cell(index)=\"row\">\r\n        {{ row.index + 1 }}\r\n      </template>\r\n\r\n      <template #cell(actions)=\"row\">\r\n        <b-icon style=\"cursor: pointer;\" \r\n                icon=\"receipt\" \r\n                variant=\"dark\"\r\n                @click=\"show_modal(row.item)\"></b-icon>\r\n\r\n        <b-icon style=\"cursor: pointer;\" \r\n                icon=\"trash-fill\" \r\n                variant=\"dark\"\r\n                @click=\"del(row.item, row.index, $event.target)\"></b-icon>                \r\n      </template>\r\n    </b-table>\r\n\r\n    <!-- The modal -->\r\n    <b-modal ref=\"modify-stock\" hide-footer title=\"Stock\">\r\n      <b-form-input v-model=\"mod_unitPrice\" placeholder=\"매수단가\"></b-form-input>\r\n      <b-form-input v-model=\"mod_stockNum\" placeholder=\"주식수\"></b-form-input>\r\n      <div>\r\n        <b-button class=\"mt-3\" variant=\"outline-danger\" block @click=\"mod\">Save</b-button>\r\n      </div>\r\n    </b-modal>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import PortfolioService from \"@/services/portfolio.service.js\";\r\n  import StockInfo from '../common/StockInfo.vue'\r\n  import Utils from \"@/common/utils.js\";\r\n\r\n  export default {\r\n    name: \"portfolio-list\",\r\n    components: {\r\n      /**\r\n       * components\r\n       */\r\n    },\r\n    data () {\r\n      return {\r\n        // Note 'isActive' is left out and will not appear in the rendered table\r\n        sortBy: 'earningRate',\r\n        sortDesc: false,        \r\n        fields: [\r\n          // A virtual column that doesn't exist in items\r\n          'index',\r\n          {\r\n            key: 'businessCycle',\r\n            label: '경기순환/섹터',\r\n            thStyle: 'width: 70px',\r\n          },\r\n          {\r\n            key: 'ticker',\r\n            label: '티커',\r\n            thStyle: 'width: 80px',\r\n          },\r\n          {\r\n            key: 'currentPrice',\r\n            label: '현재가',\r\n            tdClass: 'text-end', thClass: 'text-center',\r\n            variant: 'info'\r\n          },\r\n          {\r\n            key: 'declineRate',\r\n            label: '최고가Vs하락률',\r\n            tdClass: 'text-end', thClass: 'text-center',\r\n            variant: 'warning'\r\n          },\r\n          {\r\n            key: 'w52',\r\n            label: '최저-52주-최고',\r\n            tdClass: 'text-center', thClass: 'text-center', thStyle: 'width: 200px',\r\n          },                    \r\n          {\r\n            key: 'unitPrice',\r\n            label: '매수단가',\r\n            tdClass: 'text-end', thClass: 'text-center',\r\n          },\r\n          {\r\n            key: 'stockNum',\r\n            label: '주식수',\r\n            tdClass: 'text-end', thClass: 'text-center',\r\n          },\r\n          {\r\n            key: 'totalTradingAmount',\r\n            label: '매수금액',\r\n            tdClass: 'text-end', thClass: 'text-center',\r\n            variant: 'danger'\r\n          },\r\n          {\r\n            key: 'evalAmount',\r\n            label: '평가금액',\r\n            tdClass: 'text-end', thClass: 'text-center',\r\n          },\r\n          {\r\n            key: 'earningAmount',\r\n            label: '수익금액',\r\n            tdClass: 'text-end', thClass: 'text-center',\r\n          },\r\n          {\r\n            key: 'earningRate',\r\n            label: '수익률',\r\n            tdClass: 'text-end', thClass: 'text-center',\r\n            variant: 'warning'\r\n          },\r\n          {\r\n            key: 'annualPayout',\r\n            label: '주당배당금',\r\n            tdClass: 'text-end', thClass: 'text-center',\r\n          },\r\n          {\r\n            key: 'totalPayout',\r\n            label: '총배당금',\r\n            tdClass: 'text-end', thClass: 'text-center',\r\n          },\r\n          {\r\n            key: 'investmentDivYield',\r\n            label: '투자배당률',\r\n            tdClass: 'text-end', thClass: 'text-center',\r\n          },\r\n          {\r\n            key: 'dividendPayMonth',\r\n            label: '배당주기',\r\n          },\r\n          {\r\n            key: 'portion',\r\n            label: '비중',\r\n          },\r\n          {\r\n            key: 'actions',\r\n            label: 'Actions',\r\n          },\r\n        ],\r\n        items: [],\r\n        portfolioList: [],\r\n        selectedPortfolioId: '',\r\n        mod_unitPrice: '',\r\n        mod_stockNum: '',\r\n        mod_portfolioStockId: '',\r\n        isBusy: true,\r\n        sortDirection: 'Desc',    // Desc or Asc\r\n        sortBy: 'earningRate',\r\n      }\r\n    },\r\n    created() {\r\n\r\n    },\r\n    mounted() {  \r\n      this.getPortfolioList()\r\n    },\r\n    methods: {\r\n      refresh(portfolioId) {\r\n        //this.getPortfolioList()\r\n        //console.log('this.selectedPortfolioId='+this.selectedPortfolioId+', portfolioId='+portfolioId)\r\n        if ( portfolioId ) this.selectedPortfolioId = portfolioId\r\n        this.getData(this.selectedPortfolioId)\r\n      },\r\n      getPortfolioList() {\r\n        let param = { email: this.$store.state.email } \r\n        //console.log('param='+JSON.stringify(param))\r\n\r\n        PortfolioService.getPortfolioList(param)\r\n        .then(res => {\r\n          //console.log(res);\r\n          if (res.status === 200) {\r\n            this.portfolioList = res.data\r\n            this.selectedPortfolioId = res.data[0].portfolioId\r\n            this.getData(this.selectedPortfolioId)\r\n\r\n            this.$emit('emitPortfolioList', this.portfolioList)\r\n          } else {\r\n\r\n          }\r\n        })    \r\n      },\r\n      getData(portfolioId) {\r\n        //console.log(\">>>>> getData::portfolioList::getData::protfolioId=\"+portfolioId+\", selectedPortfolioId=\"+this.selectedPortfolioId)\r\n        let param = { email: this.$store.state.email\r\n                    , portfolioId: portfolioId\r\n                    , sortDirection: this.sortDirection\r\n                    , sortBy: this.sortBy\r\n                    } \r\n\r\n        console.log(\">>>>> getData::portfolioList::getData::param=\"+JSON.stringify(param))\r\n        \r\n        PortfolioService.getPortfolioStockList(param)\r\n        .then(res => {\r\n          //console.log(res);\r\n          if (res.status === 200) {\r\n            //this.items = res.data.list\r\n            //console.log('res.data='+res.data)\r\n            let tmp_items = []\r\n            res.data.forEach((element, index) => {\r\n\r\n              //console.log('PortfolioList::getData::index='+index+', element='+JSON.stringify(element))\r\n              \r\n              var obj = {\r\n                portfolioStockId: element.portfolioStockId,\r\n                businessCycle: element.stock.businessCycle + '/' + element.stock.sector,\r\n                ticker: element.stock.ticker,\r\n                currentPrice: Utils.showDollarWith2Point(element.stock.currentPrice),\r\n                declineRate: Utils.showRateWith2Point(element.declineRate),\r\n                w52: Utils.showDollarWith2Point(element.stock.lowerPrice) + ' ↔ ' + Utils.showDollarWith2Point(element.stock.highestPrice),\r\n                unitPrice: Utils.showDollarWith2Point(element.unitPrice),\r\n                stockNum: Utils.numberWithCommas(element.stockNum),\r\n                totalTradingAmount: Utils.showDollarWith2Point(element.totalTradingAmount),\r\n                evalAmount: Utils.showDollarWith2Point(element.evalAmount),\r\n                earningAmount : Utils.showDollarWith2Point(element.earningAmount),\r\n                earningRate: Utils.showRateWith2Point(element.earningRate),\r\n                annualPayout: Utils.showDollarWith2Point(element.stock.annualPayout),\r\n                totalPayout :Utils.showDollarWith2Point(element.totalPayout),\r\n                investmentDivYield: Utils.showRateWith2Point(element.investmentDivYield),\r\n                dividendPayMonth: element.stock.dividendPayMonth,\r\n                portion: 0\r\n              }\r\n              //.log('obj='+obj)\r\n              tmp_items.push(obj)\r\n            })\r\n            this.items = tmp_items\r\n            this.isBusy = false\r\n          } else {\r\n          }\r\n        })    \r\n      }, \r\n      rowDblClickHandler(obj, index, event) {\r\n        //console.log('rowDblClickHandler::obj='+JSON.stringify(obj))\r\n        //this.fields.push({ key: 'actions', label: 'Actions' })\r\n        let params = {\r\n            ticker: obj.ticker,\r\n            parents: 'portfolio',\r\n            actions: 'view'\r\n        }\r\n        this.$modal.show(StockInfo, \r\n            {\r\n              props_param : params,\r\n              modal : this.$modal,\r\n              scrollable: \"true\"\r\n            },\r\n            {\r\n              name: 'stock-info-popup',\r\n              width : '1200px',\r\n              height : 'auto',\r\n              draggable: true,\r\n              scrollable: true\r\n            },\r\n            {\r\n              //'before-close': this.refresh\r\n              'closed': this.refresh\r\n            });\r\n      },\r\n      show_modal(obj) {\r\n        this.mod_portfolioStockId = obj.portfolioStockId\r\n        this.mod_unitPrice = obj.unitPrice.replace(/[^\\d.-]/g, '')\r\n        this.mod_stockNum = obj.stockNum.replace(/[^\\d.-]/g, '')\r\n        this.$refs['modify-stock'].show()\r\n      },\r\n      mod() {\r\n        let param = { email: this.$store.state.email\r\n                    , portfolioStockId: this.mod_portfolioStockId\r\n                    , stockNum: this.mod_stockNum\r\n                    , unitPrice: this.mod_unitPrice\r\n                    } \r\n\r\n\r\n        if(confirm(\"수정하시겠습니까?\")) {\r\n          PortfolioService.modify(param)\r\n          .then(\r\n            res => {\r\n              if (res.status === 200) {\r\n                this.refresh(this.selectedPortfolioId)\r\n\r\n                this.mod_portfolioStockId = ''\r\n                this.mod_unitPrice = ''\r\n                this.mod_stockNum = ''\r\n                this.$refs['modify-stock'].hide()\r\n                //alert(\"수정되었습니다.\")\r\n              } else {\r\n                alert(\"실행중 실패했습니다.\\n다시 이용해 주세요.\")\r\n              }\r\n            })\r\n        }                    \r\n      },\r\n      del(item, index, event) {\r\n        \r\n        //console.log('del::index='+index+', item='+JSON.stringify(item))\r\n        //console.log('>>>>>>>>>>>>>>>>>>')\r\n        //console.log('this.selectedPortfolioId='+this.selectedPortfolioId)\r\n\r\n        let param = { email: this.$store.state.email\r\n                    , portfolioStockId: item.portfolioStockId\r\n                    } \r\n\r\n        if(confirm(\"삭제하시겠습니까?\")) {\r\n          PortfolioService.remove(param)\r\n          .then(\r\n            res => {\r\n              if (res.status === 200) {\r\n                this.refresh(this.selectedPortfolioId)\r\n                alert(\"삭제되었습니다.\")\r\n              } else {\r\n                alert(\"실행중 실패했습니다.\\n다시 이용해 주세요.\")\r\n              }\r\n            })\r\n        }\r\n\r\n      },\r\n      headClickHandler(key, field, event) {\r\n        console.log('>>> headClcikHandler key='+key+', field='+JSON.stringify(field))\r\n        // this.sortDirection\r\n        this.sortDirection = this.sortDirection === 'Desc' ? 'Asc' : 'Desc'\r\n\r\n        let _keys = new Map()\r\n        _keys.set('businessCycle', 'stock.businessCycle')\r\n        _keys.set('ticker', 'stock.ticker')\r\n        _keys.set('currentPrice', 'stock.currentPrice')\r\n        _keys.set('annualPayout', 'stock.annualPayout')\r\n        _keys.set('dividendPayMonth', 'stock.dividendPayMonth')\r\n        _keys.set('declineRate', 'stock.declineRate')\r\n\r\n        this.sortBy = ( _keys.get(key) ) ? _keys.get(key) : key\r\n        this.getData(this.selectedPortfolioId)\r\n      }\r\n      \r\n    }\r\n  }\r\n</script>\r\n<style lang=\"scss\">\r\n\r\n</style>    \r\n\r\n"]}]}