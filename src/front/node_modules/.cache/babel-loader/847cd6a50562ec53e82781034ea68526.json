{"remainingRequest":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v3\\src\\front\\node_modules\\babel-loader\\lib\\index.js!C:\\04_dev\\99_workspace_launchingService\\myStocks_v3\\src\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\04_dev\\99_workspace_launchingService\\myStocks_v3\\src\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\04_dev\\99_workspace_launchingService\\myStocks_v3\\src\\front\\src\\pages\\TradingNote.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v3\\src\\front\\src\\pages\\TradingNote.vue","mtime":1644547563749},{"path":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v3\\src\\front\\babel.config.js","mtime":1643948298976},{"path":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v3\\src\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v3\\src\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v3\\src\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v3\\src\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFRyYWRpbmdOb3RlU2VydmljZSBmcm9tICJAL3NlcnZpY2VzL3RyYWRpbmdOb3RlLnNlcnZpY2UuanMiOwppbXBvcnQgVXRpbHMgZnJvbSAiQC9jb21tb24vdXRpbHMuanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogInRyYWRpbmdOb3RlIiwKICBjb21wb25lbnRzOiB7CiAgICAvKioKICAgICAqIGNvbXBvbmVudHMKICAgICAqLwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZpZWxkczogW3sKICAgICAgICBrZXk6ICdwb3J0Zm9saW9OYW1lJywKICAgICAgICBsYWJlbDogJ+2PrO2KuO2PtOumrOyYpCcKICAgICAgfSwgewogICAgICAgIGtleTogJ3RyYWRpbmdEYXRlJywKICAgICAgICBsYWJlbDogJ+qxsOuemOydvCcKICAgICAgfSwgewogICAgICAgIGtleTogJ3RpY2tlcicsCiAgICAgICAgbGFiZWw6ICfti7Dsu6QnCiAgICAgIH0sIHsKICAgICAgICBrZXk6ICd1bml0UHJpY2UnLAogICAgICAgIGxhYmVsOiAn7LK06rKw64uo6rCAJywKICAgICAgICB0ZENsYXNzOiAndGV4dC1lbmQnLAogICAgICAgIHRoQ2xhc3M6ICd0ZXh0LWNlbnRlcicKICAgICAgfSwgewogICAgICAgIGtleTogJ3N0b2NrTnVtJywKICAgICAgICBsYWJlbDogJ+yImOufiScsCiAgICAgICAgdGRDbGFzczogJ3RleHQtZW5kJywKICAgICAgICB0aENsYXNzOiAndGV4dC1jZW50ZXInCiAgICAgIH0sIHsKICAgICAgICBrZXk6ICd0cmFkaW5nVHlwZScsCiAgICAgICAgbGFiZWw6ICfrp6Trp6TqtazrtoQnCiAgICAgIH0sIHsKICAgICAgICBrZXk6ICd0cmFkaW5nQW1vdW50JywKICAgICAgICBsYWJlbDogJ+qxsOuemOq4iOyVoScsCiAgICAgICAgdGRDbGFzczogJ3RleHQtZW5kJywKICAgICAgICB0aENsYXNzOiAndGV4dC1jZW50ZXInCiAgICAgIH0sIHsKICAgICAgICBrZXk6ICdmZWUnLAogICAgICAgIGxhYmVsOiAn7IiY7IiY66OMJywKICAgICAgICB0ZENsYXNzOiAndGV4dC1lbmQnLAogICAgICAgIHRoQ2xhc3M6ICd0ZXh0LWNlbnRlcicKICAgICAgfSwgewogICAgICAgIGtleTogJ2V4Y2hhbmdlUmF0ZScsCiAgICAgICAgbGFiZWw6ICftmZjsnKgnLAogICAgICAgIHRkQ2xhc3M6ICd0ZXh0LWVuZCcsCiAgICAgICAgdGhDbGFzczogJ3RleHQtY2VudGVyJwogICAgICB9LCB7CiAgICAgICAga2V5OiAnYWN0aW9ucycsCiAgICAgICAgbGFiZWw6ICdBY3Rpb25zJwogICAgICB9XSwKICAgICAgaXRlbXM6IFtdLAogICAgICBvcHRpb25zOiBbXSwKICAgICAgb3B0aW9uczI6IFt7CiAgICAgICAgdmFsdWU6ICfrp6TsiJgnLAogICAgICAgIHRleHQ6ICfrp6TsiJgnCiAgICAgIH0sIHsKICAgICAgICB2YWx1ZTogJ+unpOuPhCcsCiAgICAgICAgdGV4dDogJ+unpOuPhCcKICAgICAgfV0sCiAgICAgIHRyYWRpbmdOb3RlSWQ6ICcnLAogICAgICB0cmFkaW5nRGF0ZTogJycsCiAgICAgIHRpY2tlcjogJycsCiAgICAgIHVuaXRQcmljZTogJycsCiAgICAgIHN0b2NrTnVtOiAnJywKICAgICAgdHJhZGluZ1R5cGU6ICfrp6TsiJgnLAogICAgICB0cmFkaW5nQW1vdW50OiAnJywKICAgICAgZmVlOiAnJywKICAgICAgZXhjaGFuZ2VSYXRlOiAnJywKICAgICAgcG9ydGZvbGlvTGlzdDogW10sCiAgICAgIHNlbGVjdGVkUG9ydGZvbGlvSWQ6ICcnLAogICAgICBmb3JtOiB7CiAgICAgICAgcG9ydGZvbGlvSWQ6ICcnLAogICAgICAgIHRyYWRpbmdOb3RlSWQ6ICcnLAogICAgICAgIHRyYWRpbmdEYXRlOiAnJywKICAgICAgICB0aWNrZXI6ICcnLAogICAgICAgIHVuaXRQcmljZTogJycsCiAgICAgICAgc3RvY2tOdW06ICcnLAogICAgICAgIHRyYWRpbmdUeXBlOiAn66ek7IiYJywKICAgICAgICB0cmFkaW5nQW1vdW50OiAnJywKICAgICAgICBmZWU6ICcnLAogICAgICAgIGV4Y2hhbmdlUmF0ZTogJycKICAgICAgfSwKICAgICAgaW5wdXRfbW9kZTogdHJ1ZSwKICAgICAgaXNCdXN5OiB0cnVlCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHt9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAvKioKICAgICAqIG1vdW50ZWQKICAgICAqLwogICAgdGhpcy5nZXREYXRhKCk7CiAgICB0aGlzLmdldFBvcnRmb2xpb0xpc3QoKTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICAvKioKICAgICAqIGNvbXB1dGVkCiAgICAgKi8KICB9LAogIG1ldGhvZHM6IHsKICAgIC8qKgogICAgICogbWV0aG9kcwogICAgICovCiAgICByZWZyZXNoOiBmdW5jdGlvbiByZWZyZXNoKCkgewogICAgICB0aGlzLmdldERhdGEoKTsKICAgIH0sCiAgICBnZXRQb3J0Zm9saW9MaXN0OiBmdW5jdGlvbiBnZXRQb3J0Zm9saW9MaXN0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIHBhcmFtID0gewogICAgICAgIGVtYWlsOiB0aGlzLiRzdG9yZS5zdGF0ZS5lbWFpbAogICAgICB9OwogICAgICBjb25zb2xlLmxvZygncGFyYW09JyArIEpTT04uc3RyaW5naWZ5KHBhcmFtKSk7CiAgICAgIFRyYWRpbmdOb3RlU2VydmljZS5nZXRQb3J0Zm9saW9MaXN0KHBhcmFtKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBjb25zb2xlLmxvZyhyZXMpOwoKICAgICAgICBpZiAocmVzLnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgICAgICBfdGhpcy5wb3J0Zm9saW9MaXN0ID0gcmVzLmRhdGE7IC8vdGhpcy5zZWxlY3RlZFBvcnRmb2xpb0lkID0gcmVzLmRhdGFbMF0ucG9ydGZvbGlvSWQKCiAgICAgICAgICBfdGhpcy5mb3JtLnBvcnRmb2xpb0lkID0gcmVzLmRhdGFbMF0ucG9ydGZvbGlvSWQ7CiAgICAgICAgICB2YXIgdG1wX2l0ZW1zID0gW107CiAgICAgICAgICByZXMuZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtZW50LCBpbmRleCkgewogICAgICAgICAgICB2YXIgb2JqID0gewogICAgICAgICAgICAgIHZhbHVlOiBlbGVtZW50LnBvcnRmb2xpb0lkLAogICAgICAgICAgICAgIHRleHQ6IGVsZW1lbnQubmFtZQogICAgICAgICAgICB9OwogICAgICAgICAgICB0bXBfaXRlbXMucHVzaChvYmopOwogICAgICAgICAgfSk7CiAgICAgICAgICBfdGhpcy5vcHRpb25zID0gdG1wX2l0ZW1zOwogICAgICAgIH0gZWxzZSB7fQogICAgICB9KTsKICAgIH0sCiAgICBnZXREYXRhOiBmdW5jdGlvbiBnZXREYXRhKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciBwYXJhbSA9IHsKICAgICAgICBlbWFpbDogdGhpcy4kc3RvcmUuc3RhdGUuZW1haWwKICAgICAgfTsKICAgICAgY29uc29sZS5sb2coJ3RoaXMub3B0aW9ucz0nICsgdGhpcy5vcHRpb25zKTsgLy8g7Y+s7Yq47Y+066as7JikIOuqqeuhnSDrp7XsnLzroZwg7IOd7ISxLCDslYTrnpgg66ek66ek7J287KeAIOumrOyKpO2KuOyXkOyEnCDssLjsobDtlZjquLAg7JyE7ZWoKOunpOunpOydvOyngOuKlCBpZOunjCDqsIDsp4Dqs6Ag7J6I7J2MKQoKICAgICAgdmFyIF9wb3J0Zm9saW9zID0gbmV3IE1hcCgpOwoKICAgICAgVHJhZGluZ05vdGVTZXJ2aWNlLmdldFBvcnRmb2xpb0xpc3QocGFyYW0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHJlcy5kYXRhLmZvckVhY2goZnVuY3Rpb24gKGVsZW1lbnQsIGluZGV4KSB7CiAgICAgICAgICBfcG9ydGZvbGlvcy5zZXQoZWxlbWVudC5wb3J0Zm9saW9JZCwgZWxlbWVudC5uYW1lKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICAgIFRyYWRpbmdOb3RlU2VydmljZS5nZXRMaXN0KHBhcmFtKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAvL2NvbnNvbGUubG9nKCdnZXREYXRhLnJlcz0nK0pTT04uc3RyaW5naWZ5KHJlcykpOwogICAgICAgIGlmIChyZXMuc3RhdHVzID09PSAyMDApIHsKICAgICAgICAgIC8vdGhpcy5pdGVtcyA9IHJlcy5kYXRhLmxpc3QKICAgICAgICAgIHZhciB0bXBfaXRlbXMgPSBbXTsKICAgICAgICAgIHJlcy5kYXRhLmZvckVhY2goZnVuY3Rpb24gKGVsZW1lbnQsIGluZGV4KSB7CiAgICAgICAgICAgIC8vY29uc29sZS5sb2coJ2luZGV4PScraW5kZXgrJywgZWxlbWVudD0nK0pTT04uc3RyaW5naWZ5KGVsZW1lbnQpKQogICAgICAgICAgICB2YXIgb2JqID0gewogICAgICAgICAgICAgIHRyYWRpbmdOb3RlSWQ6IGVsZW1lbnQudHJhZGluZ05vdGVJZCwKICAgICAgICAgICAgICBwb3J0Zm9saW9JZDogZWxlbWVudC5wb3J0Zm9saW9JZCwKICAgICAgICAgICAgICBwb3J0Zm9saW9OYW1lOiBfcG9ydGZvbGlvcy5nZXQoZWxlbWVudC5wb3J0Zm9saW9JZCksCiAgICAgICAgICAgICAgdHJhZGluZ0RhdGU6IFV0aXNsLnN0cmluZ1RvRGF0ZVN0cldpdGhIeXBoZW4oZWxlbWVudC50cmFkaW5nRGF0ZSksCiAgICAgICAgICAgICAgdGlja2VyOiBlbGVtZW50LnN0b2NrLnRpY2tlciwKICAgICAgICAgICAgICB1bml0UHJpY2U6IFV0aWxzLnNob3dEb2xsYXJXaXRoMlBvaW50KGVsZW1lbnQudW5pdFByaWNlKSwKICAgICAgICAgICAgICBzdG9ja051bTogVXRpbHMubnVtYmVyV2l0aENvbW1hcyhlbGVtZW50LnN0b2NrTnVtKSwKICAgICAgICAgICAgICB0cmFkaW5nVHlwZTogZWxlbWVudC50cmFkaW5nVHlwZSwKICAgICAgICAgICAgICB0cmFkaW5nQW1vdW50OiBVdGlscy5zaG93RG9sbGFyV2l0aDJQb2ludChlbGVtZW50LnRyYWRpbmdBbW91bnQpLAogICAgICAgICAgICAgIGZlZTogVXRpbHMuc2hvd0RvbGxhcldpdGgyUG9pbnQoZWxlbWVudC5mZWUpLAogICAgICAgICAgICAgIGV4Y2hhbmdlUmF0ZTogVXRpbHMubnVtYmVyV2l0aENvbW1hcyhlbGVtZW50LmV4Y2hhbmdlUmF0ZSkKICAgICAgICAgICAgfTsKICAgICAgICAgICAgdG1wX2l0ZW1zLnB1c2gob2JqKTsKICAgICAgICAgIH0pOwogICAgICAgICAgX3RoaXMyLml0ZW1zID0gdG1wX2l0ZW1zOwogICAgICAgICAgX3RoaXMyLmlzQnVzeSA9IGZhbHNlOwogICAgICAgIH0gZWxzZSB7fQogICAgICB9KTsKICAgIH0sCiAgICBzZXRGb3JtVG9QYXJhbTogZnVuY3Rpb24gc2V0Rm9ybVRvUGFyYW0oKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdmFyIHBhcmFtID0ge307CiAgICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXModGhpcy5mb3JtKTsKICAgICAga2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICBjb25zb2xlLmxvZygna2V5PScgKyBrZXkgKyAnLCB2YWx1ZT0nICsgX3RoaXMzLmZvcm1ba2V5XSk7CiAgICAgICAgcGFyYW1ba2V5XSA9IF90aGlzMy5mb3JtW2tleV07CiAgICAgIH0pOwogICAgICByZXR1cm4gcGFyYW07CiAgICB9LAogICAgYWRkOiBmdW5jdGlvbiBhZGQoKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgdmFyIHBhcmFtID0gdGhpcy5zZXRGb3JtVG9QYXJhbSgpOwogICAgICBwYXJhbVsnZW1haWwnXSA9IHRoaXMuJHN0b3JlLnN0YXRlLmVtYWlsOwogICAgICBwYXJhbVsndHJhZGluZ0RhdGUnXSA9IHBhcmFtLnRyYWRpbmdEYXRlLnJlcGxhY2UoLy0vZywgJycpOwoKICAgICAgaWYgKGNvbmZpcm0oIuy2lOqwgO2VmOyLnOqyoOyKteuLiOq5jD8iKSkgewogICAgICAgIFRyYWRpbmdOb3RlU2VydmljZS5yZWdpc3RlcihwYXJhbSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygnYWRkOjpyZXMnICsgcmVzKTsKCiAgICAgICAgICBpZiAocmVzLnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgICAgICAgIC8vdGhpcy4kcmVmcy5saXN0UmVmcmVzaFJlcXVlc3QucmVmcmVzaCh0aGlzLnNlbGVjdGVkUG9ydGZvbGlvSWQpCiAgICAgICAgICAgIC8vdGhpcy50aWNrZXI0QWRkID0gJycKICAgICAgICAgICAgX3RoaXM0LnJlZnJlc2goKTsKCiAgICAgICAgICAgIGFsZXJ0KCfrp6Trp6Tsnbzsp4DqsIAg65Ox66GdIOuQmOyXiOyKteuLiOuLpC4nKTsKICAgICAgICAgIH0gZWxzZSB7fQogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgbW9kOiBmdW5jdGlvbiBtb2QoKSB7CiAgICAgIHZhciBfdGhpczUgPSB0aGlzOwoKICAgICAgdmFyIHBhcmFtID0gdGhpcy5zZXRGb3JtVG9QYXJhbSgpOwogICAgICBwYXJhbVsnZW1haWwnXSA9IHRoaXMuJHN0b3JlLnN0YXRlLmVtYWlsOwogICAgICBwYXJhbVsndHJhZGluZ0RhdGUnXSA9IHBhcmFtLnRyYWRpbmdEYXRlLnJlcGxhY2UoLy0vZywgJycpOyAvL2NvbnNvbGUubG9nKCdwYXJhbT0nK0pTT04uc3RyaW5naWZ5KHBhcmFtKSkKCiAgICAgIGlmIChjb25maXJtKCLsiJjsoJXtlZjsi5zqsqDsirXri4jquYw/IikpIHsKICAgICAgICBUcmFkaW5nTm90ZVNlcnZpY2UubW9kaWZ5KHBhcmFtKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdhZGQ6OnJlcycgKyByZXMpOwoKICAgICAgICAgIGlmIChyZXMuc3RhdHVzID09PSAyMDApIHsKICAgICAgICAgICAgLy90aGlzLiRyZWZzLmxpc3RSZWZyZXNoUmVxdWVzdC5yZWZyZXNoKHRoaXMuc2VsZWN0ZWRQb3J0Zm9saW9JZCkKICAgICAgICAgICAgLy90aGlzLnRpY2tlcjRBZGQgPSAnJwogICAgICAgICAgICBfdGhpczUuY2xlYXIoKTsKCiAgICAgICAgICAgIF90aGlzNS5yZWZyZXNoKCk7CgogICAgICAgICAgICBhbGVydCgn66ek66ek7J287KeA6rCAIOyImOyglSDrkJjsl4jsirXri4jri6QuJyk7CiAgICAgICAgICB9IGVsc2Uge30KICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIGRlbDogZnVuY3Rpb24gZGVsKGl0ZW0sIGluZGV4LCBldmVudCkgewogICAgICB2YXIgX3RoaXM2ID0gdGhpczsKCiAgICAgIGNvbnNvbGUubG9nKCdkZWw6OmluZGV4PScgKyBpbmRleCArICcsIGl0ZW09JyArIEpTT04uc3RyaW5naWZ5KGl0ZW0pKTsKCiAgICAgIGlmIChjb25maXJtKCLsgq3soJztlZjsi5zqsqDsirXri4jquYw/IikpIHsKICAgICAgICBUcmFkaW5nTm90ZVNlcnZpY2UucmVtb3ZlKGl0ZW0udHJhZGluZ05vdGVJZCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBpZiAocmVzLnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgICAgICAgIF90aGlzNi5jbGVhcigpOwoKICAgICAgICAgICAgX3RoaXM2LnJlZnJlc2goX3RoaXM2LnNlbGVjdGVkUG9ydGZvbGlvSWQpOwoKICAgICAgICAgICAgYWxlcnQoIuyCreygnOuQmOyXiOyKteuLiOuLpC4iKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGFsZXJ0KCLsi6TtlonspJEg7Iuk7Yyo7ZaI7Iq164uI64ukLlxu64uk7IucIOydtOyaqe2VtCDso7zshLjsmpQuIik7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBjbGVhcjogZnVuY3Rpb24gY2xlYXIoKSB7CiAgICAgIHRoaXMuaW5wdXRfbW9kZSA9IHRydWU7CiAgICAgIHRoaXMuZm9ybS50cmFkaW5nTm90ZUlkID0gJyc7CiAgICAgIHRoaXMuZm9ybS50cmFkaW5nRGF0ZSA9ICcnOwogICAgICB0aGlzLmZvcm0udGlja2VyID0gJyc7CiAgICAgIHRoaXMuZm9ybS51bml0UHJpY2UgPSAnJzsKICAgICAgdGhpcy5mb3JtLnN0b2NrTnVtID0gJyc7CiAgICAgIHRoaXMuZm9ybS50cmFkaW5nQW1vdW50ID0gJyc7CiAgICAgIHRoaXMuZm9ybS5mZWUgPSAnJzsKICAgICAgdGhpcy5mb3JtLmV4Y2hhbmdlUmF0ZSA9ICcnOwogICAgfSwKICAgIHJvd0RibENsaWNrSGFuZGxlcjogZnVuY3Rpb24gcm93RGJsQ2xpY2tIYW5kbGVyKG9iaiwgaW5kZXgsIGV2ZW50KSB7CiAgICAgIC8vY29uc29sZS5sb2coJ2luZGV4PScraW5kZXgrJywgb2JqLnRpY2tlcj0nK29iai50aWNrZXIrJywgZXZlbnQ9JytldmVudCkKICAgICAgdGhpcy5pbnB1dF9tb2RlID0gZmFsc2U7CiAgICAgIHRoaXMuZm9ybS50cmFkaW5nTm90ZUlkID0gb2JqLnRyYWRpbmdOb3RlSWQ7CiAgICAgIHRoaXMuZm9ybS5wb3J0Zm9saW9JZCA9IG9iai5wb3J0Zm9saW9JZDsKICAgICAgdGhpcy5mb3JtLnRyYWRpbmdEYXRlID0gb2JqLnRyYWRpbmdEYXRlOwogICAgICB0aGlzLmZvcm0udGlja2VyID0gb2JqLnRpY2tlcjsKICAgICAgdGhpcy5mb3JtLnVuaXRQcmljZSA9IG9iai51bml0UHJpY2UucmVwbGFjZSgvW15cZC4tXS9nLCAnJyk7CiAgICAgIHRoaXMuZm9ybS5zdG9ja051bSA9IG9iai5zdG9ja051bS5yZXBsYWNlKC9bXlxkLi1dL2csICcnKTsKICAgICAgdGhpcy5mb3JtLnRyYWRpbmdUeXBlID0gb2JqLnRyYWRpbmdUeXBlOwogICAgICB0aGlzLmZvcm0udHJhZGluZ0Ftb3VudCA9IG9iai50cmFkaW5nQW1vdW50LnJlcGxhY2UoL1teXGQuLV0vZywgJycpOwogICAgICB0aGlzLmZvcm0uZmVlID0gb2JqLmZlZS5yZXBsYWNlKC9bXlxkLi1dL2csICcnKTsKICAgICAgdGhpcy5mb3JtLmV4Y2hhbmdlUmF0ZSA9IG9iai5leGNoYW5nZVJhdGUucmVwbGFjZSgvW15cZC4tXS9nLCAnJyk7CiAgICB9LAogICAgb25TdWJtaXQ6IGZ1bmN0aW9uIG9uU3VibWl0KGV2ZW50KSB7CiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7IC8vYWxlcnQoSlNPTi5zdHJpbmdpZnkodGhpcy5mb3JtKSkKCiAgICAgIGlmICh0aGlzLmlucHV0X21vZGUpIHRoaXMuYWRkKCk7ZWxzZSB0aGlzLm1vZCgpOwogICAgfSwKICAgIG9uUmVzZXQ6IGZ1bmN0aW9uIG9uUmVzZXQoZXZlbnQpIHsKICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsgLy8gUmVzZXQgb3VyIGZvcm0gdmFsdWVzCgogICAgICB0aGlzLmNsZWFyKCk7CiAgICB9LAogICAgbWFrZUV4Y2VsRmlsZTogZnVuY3Rpb24gbWFrZUV4Y2VsRmlsZSgpIHsKICAgICAgVXRpbHMubWFrZUV4Y2VsRmlsZUZyb21UYWJsZSgndHJhZGluZ05vdGVfbGlzdCcpOwogICAgfQogIH0KfTs="},{"version":3,"mappings":"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","names":["name","components","data","fields","key","label","tdClass","thClass","items","options","options2","value","text","tradingNoteId","tradingDate","ticker","unitPrice","stockNum","tradingType","tradingAmount","fee","exchangeRate","portfolioList","selectedPortfolioId","form","portfolioId","input_mode","isBusy","created","mounted","computed","methods","refresh","getPortfolioList","email","console","TradingNoteService","then","res","tmp_items","getData","_portfolios","portfolioName","setFormToParam","keys","param","add","alert","mod","del","item","index","event","clear","rowDblClickHandler","obj","onSubmit","onReset","makeExcelFile","Utils"],"sources":["TradingNote.vue"],"sourcesContent":["<template>\r\n  <div>\r\n\r\n    <b-container class=\"bv-example-row\">\r\n      <b-row>\r\n        <b-col align=\"start\">\r\n          <h2>매매일지</h2>\r\n        </b-col>\r\n        <b-col align=\"end\">\r\n        </b-col>\r\n      </b-row>\r\n\r\n      <b-row>\r\n        <b-form @submit=\"onSubmit\" @reset=\"onReset\">\r\n\r\n          <b-table-simple hover small caption-top responsive>\r\n            <caption>Register or Modify Trading note</caption>\r\n            <b-thead head-variant=\"dark\">\r\n              <b-tr>\r\n                <b-th>포트폴리오</b-th>\r\n                <b-th>거래일</b-th>\r\n                <b-th>티커</b-th>\r\n                <b-th>체결단가</b-th>\r\n                <b-th>수량</b-th>\r\n                <b-th>매매구분</b-th>\r\n                <b-th>거래금액</b-th>\r\n                <b-th>수수료</b-th>\r\n                <b-th>환율</b-th>\r\n                <b-th>action</b-th>\r\n              </b-tr>\r\n            </b-thead>\r\n            <b-tbody>\r\n              <b-tr>\r\n                <b-td>\r\n                  <b-form-select class=\"mt-3 mb-3\" size=\"sm\" \r\n                                 v-model=\"form.portfolioId\" :options=\"options\"></b-form-select>\r\n                </b-td>\r\n                <b-td>\r\n                  <b-form-input class=\"mt-3 mb-3\" size=\"sm\" \r\n                                required\r\n                                type=\"date\"\r\n                                v-model=\"form.tradingDate\" placeholder=\"YYYYMMDD\"></b-form-input>\r\n                </b-td>\r\n                <b-td>\r\n                  <b-form-input class=\"mt-3 mb-3\" size=\"sm\" \r\n                                required\r\n                                v-model=\"form.ticker\" placeholder=\"AAPL\"></b-form-input>\r\n                </b-td>\r\n                <b-td>\r\n                  <b-form-input class=\"mt-3 mb-3\" size=\"sm\" \r\n                                required\r\n                                type=\"number\"\r\n                                v-model=\"form.unitPrice\" placeholder=\"\"></b-form-input>\r\n                </b-td>\r\n                <b-td>\r\n                  <b-form-input class=\"mt-3 mb-3\" size=\"sm\" \r\n                                required\r\n                                v-model=\"form.stockNum\" placeholder=\"\"></b-form-input>\r\n                </b-td>\r\n                <b-td>\r\n                  <b-form-select class=\"mt-3 mb-3\" size=\"sm\" \r\n                                 required\r\n                                 v-model=\"form.tradingType\" :options=\"options2\"></b-form-select>\r\n                </b-td>\r\n                <b-td>\r\n                  <b-form-input class=\"mt-3 mb-3\" size=\"sm\" \r\n                                required\r\n                                v-model=\"form.tradingAmount\" placeholder=\"\"></b-form-input>\r\n                </b-td>\r\n                <b-td>\r\n                  <b-form-input class=\"mt-3 mb-3\" size=\"sm\" v-model=\"form.fee\" placeholder=\"\"></b-form-input>\r\n                </b-td>\r\n                <b-td>\r\n                  <b-form-input class=\"mt-3 mb-3\" size=\"sm\" v-model=\"form.exchangeRate\" placeholder=\"\"></b-form-input>\r\n                </b-td>\r\n                <b-td style=\"width:100px\">\r\n                  <template v-if=\"input_mode\">\r\n                    <b-button type=\"submit\" class=\"mt-3\" size=\"sm\" variant=\"secondary\"><b-icon icon=\"file-earmark-plus-fill\" class=\"h5 mb-0\"></b-icon></b-button>\r\n                    <!-- <b-button type=\"reset\" variant=\"danger\">Reset</b-button> -->\r\n                  </template>\r\n                  <template v-else>\r\n                    <b-button type=\"submit\" class=\"mt-3\" size=\"sm\" variant=\"secondary\"><b-icon icon=\"file-earmark-check-fill\" class=\"h5 mb-0\"></b-icon></b-button>&nbsp;\r\n                    <b-button type=\"reset\" class=\"mt-3\" size=\"sm\" variant=\"secondary\"><b-icon icon=\"file-earmark-minus-fill\" class=\"h5 mb-0\"></b-icon></b-button>\r\n                  </template>\r\n                </b-td>\r\n              </b-tr>\r\n            </b-tbody>\r\n          </b-table-simple>\r\n        </b-form>\r\n        \r\n      </b-row>\r\n\r\n      <b-row>\r\n        <b-col align=\"end\">\r\n            <b-button class=\"mt-3\" size=\"sm\" variant=\"outline-secondary\" \r\n                      id=\"excel\" block @click=\"makeExcelFile\">Excel</b-button>&nbsp;\r\n        </b-col>           \r\n      </b-row>\r\n    \r\n      <b-row>\r\n        <b-table striped hover \r\n                 id=\"tradingNote_list\"\r\n                 :items=\"items\" \r\n                 :fields=\"fields\"\r\n                 :busy=\"isBusy\"\r\n                 sticky-header=\"700px\"\r\n                 @row-dblclicked=\"(item, index, event) => rowDblClickHandler(item, index, event)\">\r\n\r\n          <template #table-busy>\r\n            <div class=\"text-center text-danger my-2\">\r\n              <b-spinner class=\"align-middle\"></b-spinner>\r\n              <strong>Loading...</strong>\r\n            </div>\r\n          </template>\r\n\r\n          <template #cell(actions)=\"row\">\r\n            <b-icon style=\"cursor: pointer;\" \r\n                    icon=\"trash-fill\" \r\n                    variant=\"dark\"\r\n                    @click=\"del(row.item, row.index, $event.target)\"></b-icon>\r\n          </template>                 \r\n        </b-table>\r\n      </b-row>\r\n\r\n      <!-- The modal -->\r\n      <!--       \r\n      <b-modal ref=\"add-ticker\" hide-footer title=\"Add Ticker\">\r\n        <b-form-input v-model=\"ticker4Add\" placeholder=\"Enter Ticker\"></b-form-input>\r\n        <b-button class=\"mt-3\" variant=\"outline-warning\" block @click=\"addTicker\">Save</b-button>\r\n      </b-modal> -->\r\n\r\n\r\n\r\n    </b-container>\r\n\r\n  </div>\r\n</template>\r\n<script>\r\n  import TradingNoteService from \"@/services/tradingNote.service.js\";\r\n  import Utils from \"@/common/utils.js\";\r\n\r\n  export default {\r\n    name: \"tradingNote\",\r\n    components: {\r\n      /**\r\n       * components\r\n       */\r\n    },\r\n    data () {\r\n      return {\r\n        fields: [\r\n          { key: 'portfolioName', \r\n            label: '포트폴리오',\r\n          },          \r\n          { key: 'tradingDate', \r\n            label: '거래일'\r\n          },\r\n          { key: 'ticker', \r\n            label: '티커'\r\n          },\r\n          { key: 'unitPrice', \r\n            label: '체결단가',\r\n            tdClass: 'text-end', thClass: 'text-center',\r\n          },\r\n          { key: 'stockNum', \r\n            label: '수량',\r\n            tdClass: 'text-end', thClass: 'text-center',\r\n          },\r\n          { key: 'tradingType', \r\n            label: '매매구분'\r\n          },\r\n          { key: 'tradingAmount', \r\n            label: '거래금액',\r\n            tdClass: 'text-end', thClass: 'text-center',\r\n          },\r\n          { key: 'fee', \r\n            label: '수수료',\r\n            tdClass: 'text-end', thClass: 'text-center',\r\n          },\r\n          { key: 'exchangeRate', \r\n            label: '환율',\r\n            tdClass: 'text-end', thClass: 'text-center',\r\n          },\r\n          {\r\n            key: 'actions',\r\n            label: 'Actions',\r\n          },          \r\n        ],\r\n        items: [], \r\n        options: [], \r\n        options2: [ { value: '매수', text: '매수'},\r\n                    { value: '매도', text: '매도'} ], \r\n        tradingNoteId: '',\r\n        tradingDate: '',\r\n        ticker: '',\r\n        unitPrice: '',\r\n        stockNum: '',\r\n        tradingType: '매수',\r\n        tradingAmount: '',\r\n        fee: '',\r\n        exchangeRate: '',\r\n        portfolioList: [],\r\n        selectedPortfolioId: '',  \r\n        form: {\r\n          portfolioId: '',\r\n          tradingNoteId: '',\r\n          tradingDate: '',\r\n          ticker: '',\r\n          unitPrice: '',\r\n          stockNum: '',\r\n          tradingType: '매수',\r\n          tradingAmount: '',\r\n          fee: '',\r\n          exchangeRate: '',\r\n        },\r\n        input_mode: true,\r\n        isBusy: true,\r\n      }\r\n    },\r\n    created() {\r\n      \r\n    },\r\n    mounted() {\r\n      /**\r\n       * mounted\r\n       */\r\n      this.getData()\r\n      this.getPortfolioList()\r\n    },\r\n    computed: {\r\n      /**\r\n       * computed\r\n       */\r\n    },\r\n    methods: {\r\n      /**\r\n       * methods\r\n       */\r\n      refresh() {\r\n        this.getData()\r\n      },\r\n      getPortfolioList() {\r\n        let param = { email: this.$store.state.email } \r\n        console.log('param='+JSON.stringify(param))\r\n\r\n        TradingNoteService.getPortfolioList(param)\r\n        .then(res => {\r\n          console.log(res);\r\n          if (res.status === 200) {\r\n            this.portfolioList = res.data\r\n            //this.selectedPortfolioId = res.data[0].portfolioId\r\n            this.form.portfolioId = res.data[0].portfolioId\r\n            let tmp_items = []\r\n            res.data.forEach((element, index) => {\r\n              var obj = {\r\n                value: element.portfolioId,\r\n                text: element.name\r\n              }\r\n              tmp_items.push(obj)\r\n            })\r\n            this.options = tmp_items\r\n          } else {\r\n\r\n          }\r\n        })    \r\n      },      \r\n      getData() {\r\n        let param = { email: this.$store.state.email }\r\n\r\n        console.log('this.options='+this.options) \r\n\r\n        // 포트폴리오 목록 맵으로 생성, 아래 매매일지 리스트에서 참조하기 위함(매매일지는 id만 가지고 있음)\r\n        let _portfolios = new Map()\r\n        TradingNoteService.getPortfolioList(param)\r\n        .then(res => {\r\n          res.data.forEach((element, index) => {\r\n            _portfolios.set(element.portfolioId, element.name)\r\n          })\r\n        })    \r\n\r\n        TradingNoteService.getList(param)\r\n        .then(res => {\r\n\r\n          //console.log('getData.res='+JSON.stringify(res));\r\n          if (res.status === 200) {\r\n            //this.items = res.data.list\r\n            let tmp_items = []\r\n            res.data.forEach((element, index) => {\r\n              //console.log('index='+index+', element='+JSON.stringify(element))\r\n\r\n              var obj = {\r\n                tradingNoteId: element.tradingNoteId,\r\n                portfolioId: element.portfolioId,\r\n                portfolioName: _portfolios.get(element.portfolioId),\r\n                tradingDate: Utisl.stringToDateStrWithHyphen(element.tradingDate),\r\n                ticker: element.stock.ticker,\r\n                unitPrice: Utils.showDollarWith2Point(element.unitPrice),\r\n                stockNum: Utils.numberWithCommas(element.stockNum),\r\n                tradingType: element.tradingType,\r\n                tradingAmount: Utils.showDollarWith2Point(element.tradingAmount),\r\n                fee: Utils.showDollarWith2Point(element.fee),\r\n                exchangeRate: Utils.numberWithCommas(element.exchangeRate),\r\n              }\r\n              tmp_items.push(obj)\r\n            })\r\n            this.items = tmp_items\r\n            this.isBusy = false\r\n          } else {\r\n          }\r\n        })    \r\n      },  \r\n      setFormToParam() {\r\n        let param = {}\r\n        let keys = Object.keys(this.form)\r\n        keys.forEach(key => {\r\n          console.log('key='+key+', value='+this.form[key])\r\n          param[key] = this.form[key]\r\n        })\r\n        return param\r\n      },\r\n      add() {\r\n        let param = this.setFormToParam()\r\n        param['email'] = this.$store.state.email\r\n        param['tradingDate'] = param.tradingDate.replace(/-/g,'')\r\n\r\n        if(confirm(\"추가하시겠습니까?\")) {\r\n\r\n          TradingNoteService.register(param)\r\n          .then(res => {\r\n            console.log('add::res'+res);\r\n            if (res.status === 200) {\r\n              \r\n              //this.$refs.listRefreshRequest.refresh(this.selectedPortfolioId)\r\n              //this.ticker4Add = ''\r\n              this.refresh()\r\n              alert('매매일지가 등록 되었습니다.');\r\n            } else {\r\n\r\n            }\r\n          })\r\n        }\r\n\r\n      },\r\n      mod() {\r\n        let param = this.setFormToParam()\r\n        param['email'] = this.$store.state.email\r\n        param['tradingDate'] = param.tradingDate.replace(/-/g,'')\r\n\r\n        //console.log('param='+JSON.stringify(param))\r\n        if(confirm(\"수정하시겠습니까?\")) {\r\n          TradingNoteService.modify(param)\r\n          .then(res => {\r\n            console.log('add::res'+res);\r\n            if (res.status === 200) {\r\n              \r\n              //this.$refs.listRefreshRequest.refresh(this.selectedPortfolioId)\r\n              //this.ticker4Add = ''\r\n              this.clear()\r\n              this.refresh()\r\n              alert('매매일지가 수정 되었습니다.');\r\n            } else {\r\n\r\n            }\r\n          })\r\n        }\r\n      },\r\n      del(item, index, event) {\r\n\r\n        console.log('del::index='+index+', item='+JSON.stringify(item))\r\n\r\n        if(confirm(\"삭제하시겠습니까?\")) {\r\n          TradingNoteService.remove(item.tradingNoteId)\r\n          .then(\r\n            res => {\r\n              if (res.status === 200) {\r\n                this.clear()\r\n                this.refresh(this.selectedPortfolioId)\r\n                alert(\"삭제되었습니다.\")\r\n              } else {\r\n                alert(\"실행중 실패했습니다.\\n다시 이용해 주세요.\")\r\n              }\r\n            })\r\n        }\r\n      },\r\n      clear() {\r\n        this.input_mode = true\r\n        this.form.tradingNoteId = ''\r\n        this.form.tradingDate = ''\r\n        this.form.ticker = ''\r\n        this.form.unitPrice = ''\r\n        this.form.stockNum = ''\r\n        this.form.tradingAmount = ''\r\n        this.form.fee = ''\r\n        this.form.exchangeRate = ''\r\n      },\r\n      rowDblClickHandler(obj, index, event) {\r\n        //console.log('index='+index+', obj.ticker='+obj.ticker+', event='+event)\r\n        this.input_mode = false\r\n        this.form.tradingNoteId = obj.tradingNoteId\r\n        this.form.portfolioId = obj.portfolioId\r\n        this.form.tradingDate = obj.tradingDate\r\n        this.form.ticker = obj.ticker\r\n        this.form.unitPrice = obj.unitPrice.replace(/[^\\d.-]/g, '')\r\n        this.form.stockNum = obj.stockNum.replace(/[^\\d.-]/g, '')\r\n        this.form.tradingType = obj.tradingType\r\n        this.form.tradingAmount = obj.tradingAmount.replace(/[^\\d.-]/g, '')\r\n        this.form.fee = obj.fee.replace(/[^\\d.-]/g, '')\r\n        this.form.exchangeRate = obj.exchangeRate.replace(/[^\\d.-]/g, '')\r\n\r\n      },\r\n      onSubmit(event) {\r\n        event.preventDefault()\r\n        //alert(JSON.stringify(this.form))\r\n        if (this.input_mode) this.add()\r\n        else this.mod()\r\n      },\r\n      onReset(event) {\r\n        event.preventDefault()\r\n        // Reset our form values\r\n        this.clear()\r\n      },\r\n      makeExcelFile() {\r\n        Utils.makeExcelFileFromTable('tradingNote_list')\r\n      }         \r\n\r\n    }\r\n  }\r\n</script>\r\n<style lang=\"scss\">\r\n\r\n</style>"],"sourceRoot":"src/pages"}]}