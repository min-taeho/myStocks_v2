{"remainingRequest":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v2\\src\\front\\node_modules\\thread-loader\\dist\\cjs.js!C:\\04_dev\\99_workspace_launchingService\\myStocks_v2\\src\\front\\node_modules\\babel-loader\\lib\\index.js!C:\\04_dev\\99_workspace_launchingService\\myStocks_v2\\src\\front\\src\\common\\http.interceptors.response.js","dependencies":[{"path":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v2\\src\\front\\src\\common\\http.interceptors.response.js","mtime":1643793568843},{"path":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v2\\src\\front\\babel.config.js","mtime":1643948298976},{"path":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v2\\src\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v2\\src\\front\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\04_dev\\99_workspace_launchingService\\myStocks_v2\\src\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/04_dev/99_workspace_launchingService/myStocks_v2/src/front/src/common/http.interceptors.response.js"],"names":["Jwt","routes","store","OauthService","processQueue","error","accessToken","failedQueue","forEach","prom","reject","resolve","interceptor","axiosInstance","_axios","originalRequest","config","response","url","indexOf","Promise","status","_retry","refreshToken","getRefreshToken","data","message"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,OAAhB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAOC,YAAP,MAAyB,6BAAzB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAA+B;AAAA,MAAvBC,WAAuB,uEAAT,IAAS;AAAI;AACtDC,EAAAA,WAAW,CAACC,OAAZ,CAAoB,UAAAC,IAAI,EAAI;AAAE;AAC5B,QAAIJ,KAAJ,EAAW;AACTI,MAAAA,IAAI,CAACC,MAAL,CAAYL,KAAZ;AACD,KAFD,MAEO;AACLI,MAAAA,IAAI,CAACE,OAAL,CAAaL,WAAb;AACD;AACF,GAND;AAQAC,EAAAA,WAAW,GAAG,EAAd,CATkD,CAShC;AACnB,CAVD;;AAaA,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAAAC,aAAa;AAAA,SAAI,UAAAR,KAAK,EAAI;AAAE;AAC5C,QAAMS,MAAM,GAAGD,aAAf,CAD0C,CACZ;;AAC9B,QAAME,eAAe,GAAGV,KAAK,CAACW,MAA9B;;AAEA,QAAIX,KAAK,CAACY,QAAV,EAAoB;AAChB;AACA,UAAIF,eAAe,CAACG,GAAhB,CAAoBC,OAApB,CAA4B,kBAA5B,KAAmD,CAAvD,EAA0D;AACtD;AACAC,QAAAA,OAAO,CAACV,MAAR,CAAeL,KAAf;AACH,OAHD,MAGO,IAAIA,KAAK,CAACY,QAAN,CAAeI,MAAf,KAA0B,GAA1B,IAAiC,CAACN,eAAe,CAACO,MAAtD,EAA8D;AACjE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEY,YAAMC,YAAY,GAAGvB,GAAG,CAACwB,eAAJ,EAArB,CAlBiE,CAkBrB;;AAC5C;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACS,OA7CM,MA6CA,IAAInB,KAAK,CAACY,QAAN,CAAeI,MAAf,IAAyB,GAA7B,EAAkC;AACrC,YAAIN,eAAe,CAACG,GAAhB,CAAoBC,OAApB,CAA4B,oBAA5B,KAAqD,CAAzD,EAA4D,CACxD;AACH,SAFD,MAEO;AACH,cAAId,KAAK,CAACY,QAAN,CAAeQ,IAAf,CAAoBC,OAAxB,EAAiC,CAC7B;AACH;AACJ;AACJ,OARM,MAQA,IAAIrB,KAAK,CAACY,QAAN,CAAeI,MAAf,IAAyB,GAA7B,EAAkC;AACvC;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIS;AACJ;;AAED,WAAOD,OAAO,CAACV,MAAR,CAAeL,KAAf,CAAP;AACH,GA1IgC;AAAA,CAAjC;;AA4IA,eAAeO,WAAf","sourcesContent":["import Jwt from \"./jwt\";\n//import router from '@/router';\nimport routes from '@/routes/routes'\nimport store from '@/store';\n\nimport OauthService from \"@/services/oauth.service.js\";\n\nconst processQueue = (error, accessToken = null) => {   // eslint-disable-line no-unused-vars\n  failedQueue.forEach(prom => { // eslint-disable-line no-undef\n    if (error) {\n      prom.reject(error);\n    } else {\n      prom.resolve(accessToken);\n    }\n  });\n\n  failedQueue = []; // eslint-disable-line no-undef\n};\n\n\nconst interceptor = axiosInstance => error => { // eslint-disable-line no-unused-vars\n    const _axios = axiosInstance; // eslint-disable-line no-unused-vars\n    const originalRequest = error.config;\n\n    if (error.response) {\n        //console.log(originalRequest.url);\n        if (originalRequest.url.indexOf(\"/api/oauth/login\") == 0) {\n            //console.log(\"/oauth/login\");\n            Promise.reject(error);\n        } else if (error.response.status === 401 && !originalRequest._retry) {\n            /*\n            if (isRefreshing) {\n                return new Promise(function(resolve, reject) {\n                    failedQueue.push({ resolve, reject });\n                })\n                .then(accessToken => {\n                    originalRequest.headers[\"Authorization\"] = \"Bearer \" + accessToken;\n                    return _axios.request(originalRequest);\n                })\n                .catch(err => {\n                    return Promise.reject(err);\n                });\n            }\n    \n            originalRequest._retry = true;\n            isRefreshing = true;\n            */\n            const refreshToken = Jwt.getRefreshToken(); // eslint-disable-line no-unused-vars\n            /*\n            return new Promise((resolve, reject) => {\n                // Refresh Token 으로 AccessToken 재발급 요청\n                _axios\n                    .post(\"/api/oauth/refresh\", { certify: { refreshToken } })\n                    .then(({ data }) => {\n                        console.log(\"interceptor_ refresh--------\");\n                        console.log(data);\n                        Jwt.saveToken(data.accessToken);\n                        _axios.defaults.headers.common[\"Authorization\"] =\n                            \"Bearer \" + data.accessToken;\n                        originalRequest.headers[\"Authorization\"] =\n                            \"Bearer \" + data.accessToken;\n                        processQueue(null, data.accessToken);\n                        resolve(_axios(originalRequest));\n                    })\n                    .catch(err => {\n                        console.log(\"interceptor_ CATCH\");\n                        processQueue(err, null);\n                        reject(err);\n                    })\n                    .finally(() => {\n                        isRefreshing = false;\n                    });\n            });\n            */\n        } else if (error.response.status == 400) {\n            if (originalRequest.url.indexOf(\"/api/oauth/refresh\") == 0) {\n                // 리프레시토큰 요청후 실패 > 로그아웃\n            } else {\n                if (error.response.data.message) {\n                    // 에러 메시지\n                }\n            }\n        } else if (error.response.status == 500) {\n          /*\n          console.log(\">>>http.interceptors.response.js::error.response.status\", error.response.status)\n          console.log(\">>>error.response.data.errorClassName\", error.response.data.errorClassName)\n          if (error.response.data.errorClassName === 'SignatureException') {\n            // accessToken 오류, 로그아웃 처리 후 로그린 페이지로 이동\n            if (error.response.data.message) { alert(error.response.data.message) }\n            Jwt.destroyAccessToken()\n            Jwt.destroyRefreshToken()\n            routes.replace('/login')\n          }\n          else if (error.response.data.errorClassName === 'ExpiredJwtException') {\n            // accessToken 타임아웃\n            // Refresh Token 으로 AccessToken 재발급 요청\n            originalRequest._retry = true;\n            \n            let params = {\n                userId: store.state.userId,\n                email: store.state.email,\n                refreshToken: store.state.refreshToken\n            }\n\n            // Refresh Token 으로 AccessToken 재발급 요청\n            OauthService.refresh(params)\n                .then(res => {\n                    console.log('res', res);\n                })\n                .catch(err => {\n                    console.log(\"interceptor_ CATCH\", err);\n\n                    //processQueue(err, null);\n                    //reject(err);\n                })\n                .finally(() => {\n                    Promise.reject(error);\n                })\n            \n            *\n            _axios\n                .post(\"api/v1/oauth/refresh\", { certify: { refreshToken } })\n                .then(({ data }) => {\n                    console.log(\"interceptor_ refresh--------\");\n                    console.log(data);\n                    Jwt.saveToken(data.accessToken);\n                    _axios.defaults.headers.common[\"Authorization\"] =\n                        \"Bearer \" + data.accessToken;\n                    originalRequest.headers[\"Authorization\"] =\n                        \"Bearer \" + data.accessToken;\n                    processQueue(null, data.accessToken);\n                    resolve(_axios(originalRequest));\n                })\n                .catch(err => {\n                    console.log(\"interceptor_ CATCH\");\n                    processQueue(err, null);\n                    reject(err);\n                })\n                .finally(() => {\n                    isRefreshing = false;\n                });\n            *\n        \n        \n            \n          }\n          else {\n            console.log(\">>>error.response.data\", error.response.data)\n            console.log(\">>>error.response.data.message\", error.response.data.message)\n            console.log(\">>>error.response.data.errorClassName2\", error.response.data.errorClassName)\n            console.log('Jwt.getRefreshToken()', Jwt.getRefreshToken());\n            routes.replace('/login')\n          }\n          */\n        }\n    }\n\n    return Promise.reject(error);\n};\n\nexport default interceptor;\n"]}]}